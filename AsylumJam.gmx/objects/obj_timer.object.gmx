<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize timer variables

myTime = 600.0;
audio_stop_all();
audio_play_sound(mus_loopA, 5, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make time count down

//How much time counts down
if myTime &gt; 0 {
    myTime = myTime - delta_time/1000000; //Millionths of a second is delta_time
}
else {
    myTime = 0;
    /* Need this to be nicely done */
    room_goto(rm_gameOver);
    /*with (obj_glitch) {
        crash_script = goto_gameover;
        crash_glitch_start();
    }*/
}
minutes = floor(myTime/60);
seconds = myTime%60;
showTime = string(minutes) + ":" + string(seconds);

if (minutes == 9 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_9MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_9MINS] = 1;
    dialogue(SCENE.VIRUS_9MINS, virus);
}

else if (minutes == 8 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_8MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_8MINS] = 1;
    dialogue(SCENE.VIRUS_8MINS, virus);
    audio_stop_all();
    audio_play_sound(mus_loopB, 5, 1);
}

else if (minutes == 7 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_7MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_7MINS] = 1;
    dialogue(SCENE.VIRUS_7MINS, virus);
}

else if (minutes == 6 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_6MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_6MINS] = 1;
    dialogue(SCENE.VIRUS_6MINS, virus);
}

else if (minutes == 5 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_5MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_5MINS] = 1;
    dialogue(SCENE.VIRUS_5MINS, virus);
    audio_stop_all();
    audio_play_sound(mus_loopC, 5, 1);
}

else if (minutes == 4 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_4MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_4MINS] = 1;
    dialogue(SCENE.VIRUS_4MINS, virus);
}

else if (minutes == 3 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_3MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_3MINS] = 1;
    dialogue(SCENE.VIRUS_3MINS, virus);
}

else if (minutes == 2 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_2MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_2MINS] = 1;
    dialogue(SCENE.VIRUS_2MINS, virus);
    audio_stop_all();
    audio_play_sound(mus_loopD, 5, 1);
}

else if (minutes == 1 &amp;&amp; seconds &lt; 10 &amp;&amp; !global.flag[FLAGS.V_1MINS] &amp;&amp; !instance_exists(oDialogue)) {
    global.flag[FLAGS.V_1MINS] = 1;
    dialogue(SCENE.VIRUS_1MIN, virus);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Timer countdown text

draw_set_font(fntBoomPlus);
draw_set_color(c_black);
draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
draw_text(x, y, "Time Left: " + string(showTime));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
