<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fire events

for (var i = 0; i &lt; 21; i++) {
    alreadyRun[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check flags and fire off an event if necessary

/*enum FLAGS {
    DOWNLOADED_ANTIVIRUS,
    RUN_ANTIVIRUS,
    DELETE_1_FILE,
    DELETE_CACHE,
    DELETED_FILE_AND_CACHE,
    REFORMAT_HARDDRIVE,
    DELETED_ALL_FILES,
    RESTORE_FILES,
    EXPOSE_VIRUS,
    DELETE_VIRUS_MAIN_BODY,
    DELETE_VIRUS_HIDDEN_FILE,
    GAMEWON,
    GAMEOVER,
    V_9MINS,
    V_8MINS,
    V_7MINS,
    V_6MINS,
    V_5MINS,
    V_4MINS,
    V_3MINS,
    V_2MINS,
    V_1MINS
}
*/
global.flag[FLAGS.GAMEWON] = scr_hitAllFlags();

if (global.flag[FLAGS.DELETE_CACHE] &amp;&amp; global.flag[FLAGS.DELETE_1_FILE]) {
    global.flag[FLAGS.DELETED_FILE_AND_CACHE] = 1;
}

if (global.flag[FLAGS.GAMEWON] &amp;&amp; !alreadyRun[FLAGS.GAMEWON]) {
    alreadyRun[FLAGS.GAMEWON] = 1;
    scr_runGameWinSequence();
}

else if (global.flag[FLAGS.RUN_ANTIVIRUS] &amp;&amp; !alreadyRun[FLAGS.RUN_ANTIVIRUS]) {
    alreadyRun[FLAGS.RUN_ANTIVIRUS] = 1;
    scr_startAntivirus();
}

else if (global.flag[FLAGS.DELETE_1_FILE] &amp;&amp; !alreadyRun[FLAGS.DELETE_1_FILE]) {
    alreadyRun[FLAGS.DELETE_1_FILE] = 1;
    scr_fileDeleted();
}

else if (global.flag[FLAGS.DELETE_CACHE] &amp;&amp; !alreadyRun[FLAGS.DELETE_CACHE]) {
    alreadyRun[FLAGS.DELETE_CACHE] = 1;
    scr_cacheDeleted();
}

else if (global.flag[FLAGS.DELETED_FILE_AND_CACHE] &amp;&amp; !alreadyRun[FLAGS.DELETED_FILE_AND_CACHE]) {
    alreadyRun[FLAGS.DELETED_FILE_AND_CACHE] = 1;
    scr_fileAndCacheDeleted();
}

else if (global.flag[FLAGS.RESTORE_FILES] &amp;&amp; !alreadyRun[FLAGS.RESTORE_FILES]) {
    alreadyRun[FLAGS.RESTORE_FILES] = 1;
    scr_restoreFiles();
}

else if (global.flag[FLAGS.DELETE_VIRUS_MAIN_BODY] &amp;&amp; !alreadyRun[FLAGS.DELETE_VIRUS_MAIN_BODY]) {
    alreadyRun[FLAGS.DELETE_VIRUS_MAIN_BODY] = 1;
    scr_deletedMainBody();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
